server {
  listen 80;
  server_name _;

  # Your Laravel public path inside the container
  root  /var/www/html/public;
  index index.php index.html;

  # --- Health probe (Docker/compose/k8s) ---
  location = /healthz { return 200 "ok\n"; add_header Content-Type text/plain; }

  # --- Main router ---
  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }

  # --- Static assets (cache hard, immutable if hashed) ---
  # If you use Vite hashed assets (e.g., app.abc123.js), they can be cached "forever".
  location ~* \.(?:css|js|mjs|map|jpg|jpeg|png|gif|ico|svg|webp|avif|woff2?|ttf|eot)$ {
    expires 7d;
    access_log off;
    add_header Cache-Control "public, max-age=604800, immutable";
    try_files $uri =404;
  }

  # --- PHP via FastCGI (forward to php-fpm in 'app' service) ---
  location ~ \.php$ {
    include fastcgi_params;
    fastcgi_pass app:9000;
    fastcgi_index index.php;

    # Correct file paths
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT  $realpath_root;

    # Bigger buffers/timeouts for heavy responses or large XLS processing
    fastcgi_read_timeout 180s;
    fastcgi_buffers 16 32k;
    fastcgi_buffer_size 64k;
  }

  # --- Security hardening ---
  # Never serve these anywhere
  location ~* \.(?:env|ini|log|sh|bash|sql|tpl|twig|yml|yaml)$ { deny all; }
  # Block hidden files except ACME
  location ~ /\.(?!well-known) { deny all; }
  # Block PHP execution inside storage/vendor/uploads just in case
  location ~* ^/(storage|vendor|uploads)/.*\.php$ { deny all; }

  # Optional: 503 page when Laravel is in maintenance mode (public/503.html)
  error_page 503 /503.html;
  location = /503.html { root /var/www/html/public; internal; }

  # --- Upload/body size (bump if you import large XLS files) ---
  client_max_body_size 200M;

  # --- Basic security headers (add CSP/HSTS if you terminate TLS) ---
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;

  # --- Compression ---
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_types
    text/plain text/css application/json application/javascript
    application/xml text/xml image/svg+xml;

  # If you build Nginx with brotli module, you can add:
  # brotli on;
  # brotli_comp_level 5;
  # brotli_types text/plain text/css application/javascript application/json image/svg+xml;
}
