version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html:delegated
      # keep vendor & storage inside containers for speed and correct perms
      - vendor:/var/www/html/vendor
      - storage:/var/www/html/storage
    environment:
      APP_ENV: local
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
    depends_on:
      mysql:
        condition: service_healthy
    networks: [appnet]
    restart: unless-stopped
    # no external ports; nginx talks to php-fpm internally on port 9000

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx_web
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks: [appnet]
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-myapp}
      MYSQL_USER: ${DB_USERNAME:-myapp}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks: [appnet]
    restart: unless-stopped

volumes:
  mysql_data:
  vendor:
  storage:

networks:
  appnet:
    driver: bridge
